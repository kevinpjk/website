{"version":3,"sources":["assets/background.jpeg","assets/profile.jpeg","Home.js","Experience.js","Passion.js","NoMatch.js","components/NavBar.js","components/Jumbotron.js","FontAwesome.js","components/End.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Styles","styled","div","Home","Container","Row","Col","Image","src","alt","rounded","className","Experience","Passion","NoMatch","NavBar","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","classname","Item","Link","img","Jumbotron","fluid","library","add","faGithub","faFacebookSquare","faTwitter","faLinkedin","faSkype","faGoogle","faInstagramSquare","faYoutube","End","icon","App","Fragment","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,yC,4ECA3CD,EAAOC,QAAU,IAA0B,sC,4yBCM3C,IAAMC,EAASC,IAAOC,IAAV,KA8BCC,EAAO,WAChB,OACI,kBAACH,EAAD,KACI,kBAACI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,IAAI,gCAAgCC,IAAI,UAAUC,SAAO,KAEpE,kBAACJ,EAAA,EAAD,KACI,yBAAKK,UAAU,YACX,uEACA,kLACA,2FAOhB,wBAAIA,UAAU,SAAd,YACA,yBAAKA,UAAU,YACX,kBAACN,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,wBAAIK,UAAU,YAAd,iBACA,kBAACP,EAAA,EAAD,KACI,8GAGR,kBAACE,EAAA,EAAD,KACI,wBAAIK,UAAU,YAAd,kBACA,kBAACP,EAAA,EAAD,KACI,oHAGR,kBAACE,EAAA,EAAD,KACI,wBAAIK,UAAU,YAAd,oCACA,kBAACP,EAAA,EAAD,KACI,sHAKhB,yBAAKO,UAAU,YAEf,wBAAIA,UAAU,SAAd,YACA,yBAAKA,UAAU,YACX,kBAACN,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,wBAAIK,UAAU,YAAd,WACA,kBAACP,EAAA,EAAD,KACI,4IAGR,kBAACE,EAAA,EAAD,KACI,wBAAIK,UAAU,YAAd,UACA,kBAACP,EAAA,EAAD,KACI,0EAGR,kBAACE,EAAA,EAAD,KACI,wBAAIK,UAAU,YAAd,oBACA,kBAACP,EAAA,EAAD,KACI,qH,ynBC/F5B,IAAMJ,EAASC,IAAOC,IAAV,KA8BCU,EAAa,WACtB,OACI,kBAAC,EAAD,KACI,6BACI,yBAAKD,UAAU,SACX,2CAGJ,yBAAKA,UAAU,WACX,wBAAIA,UAAU,YAAd,8BAGJ,yBAAKA,UAAU,SACX,yCAGJ,yBAAKA,UAAU,WACX,wBAAIA,UAAU,YAAd,iBACA,8FACA,4GACA,6FACA,0GAEA,0BAAMA,UAAU,YAEhB,wBAAIA,UAAU,YAAd,kBACA,gGAEA,0BAAMA,UAAU,YAEhB,wBAAIA,UAAU,YAAd,oCACA,kHACA,wGACA,sH,ynBC/DpB,IAAMX,EAASC,IAAOC,IAAV,KA8BCW,EAAU,WACnB,OACI,kBAAC,EAAD,KACI,6BACI,yBAAKF,UAAU,SACX,wCAGJ,yBAAKA,UAAU,WACX,wBAAIA,UAAU,YAAd,2BACA,wHACA,oHAEA,0BAAMA,UAAU,YAEhB,wBAAIA,UAAU,YAAd,mBACA,8EACA,2EACA,gFAEA,0BAAMA,UAAU,YAEhB,wBAAIA,UAAU,YAAd,oBACA,gGACA,mGACA,2FCxDPG,EAAU,WACnB,OACI,6BACI,8C,8TCDZ,IAAMd,EAASC,IAAOC,IAAV,KAgBCa,EAAS,kBAClB,kBAAC,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,OAAO,MACX,kBAACD,EAAA,EAAOE,MAAR,CAAcC,KAAK,cAAnB,cACA,kBAACH,EAAA,EAAOI,OAAR,CAAeC,gBAAc,0BAC7B,kBAACL,EAAA,EAAOM,SAAR,CAAiBC,GAAG,yBAChB,kBAACC,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,CAAKC,UAAU,WACX,kBAACD,EAAA,EAAIE,KAAL,KAAU,kBAACF,EAAA,EAAIG,KAAL,CAAUR,KAAK,cAAf,SACV,kBAACK,EAAA,EAAIE,KAAL,KAAU,kBAACF,EAAA,EAAIG,KAAL,CAAUR,KAAK,yBAAf,eACV,kBAACK,EAAA,EAAIE,KAAL,KAAU,kBAACF,EAAA,EAAIG,KAAL,CAAUR,KAAK,sBAAf,iB,mhBCzB9B,IAAMnB,EAASC,IAAOC,IAAV,IAEc0B,KAuBbC,EAAY,kBACrB,kBAAC,EAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACnB,UAAU,SACnB,yBAAKA,UAAU,YACf,yBAAKA,UAAU,YACf,kBAACP,EAAA,EAAD,KACI,gDACA,uDACA,qE,gBCzBhB2B,IAAQC,IACJC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,K,6kBCbJ,IAAMxC,EAASC,IAAOC,IAAV,KA2BCuC,EAAM,kBACf,kBAAC,EAAD,KACI,yBAAK9B,UAAU,SACX,kBAACN,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,uBAAGK,UAAU,OAAOQ,KAAK,+BAA8B,kBAAC,IAAD,CAAiBuB,KAAM,CAAC,MAAO,aACtF,uBAAG/B,UAAU,OAAOQ,KAAK,gCAA+B,kBAAC,IAAD,CAAiBuB,KAAM,CAAC,MAAO,aACvF,uBAAG/B,UAAU,OAAOQ,KAAK,gDAA+C,kBAAC,IAAD,CAAiBuB,KAAM,CAAC,MAAO,oBCb5GC,MAlBf,WACE,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW5C,IACjC,kBAAC,IAAD,CAAO2C,KAAK,cAAcC,UAAWnC,IACrC,kBAAC,IAAD,CAAOkC,KAAK,WAAWC,UAAWlC,IAClC,kBAAC,IAAD,CAAOkC,UAAWjC,MAGtB,kBAAC,EAAD,QCZckC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.aaed3790.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.996657a3.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/profile.5c4fbad9.jpeg\";","import React from 'react'\nimport styled from 'styled-components';\nimport { Row, Col, Container, Carousel, Image } from 'react-bootstrap';\nimport profile from \"./assets/profile.jpeg\";\n// TODO: Use Cards for sub-sections of project and passions\n// Use Carousel for actual project and experience page\nconst Styles = styled.div `\n    .mainText, .projects, .passions {\n        display: inline-block;\n        vertical-align: top;\n        text-align: center;\n        border: 3px solid transparent;\n        padding-bottom: 40px;\n        padding-top: 20px;\n    }\n\n    .title {\n        place-items: center;\n        text-align: center;\n        height: 50px;\n        background-color: #92bfde;\n        color: white;\n    }\n\n    .subtitle {\n        color: #29476c;\n        place-items: center;\n        padding-bottom: 10px;\n        padding-top: 20px;\n    }\n\n    .spacing {\n        height: 20px;\n    }\n`;\n\nexport const Home = () => {\n    return (\n        <Styles>\n            <Container>\n                <Row>\n                    <Col>\n                        <Image src=\"./assets/profile.jpeg/108x144\" alt=\"Profile\" rounded/>\n                    </Col>\n                    <Col>\n                        <div className=\"mainText\">\n                            <p>Welcome! My name is Jiankai (Kevin) Pu. </p>\n                            <p>I am a senior studying Computer Science and Psychology at the University of Michigan. I am enthusiastic about music, dancing, and creative writing.</p>\n                            <p>You can find my projects, experiences and passions here.</p>\n                        </div>\n                    </Col>\n                </Row>\n                \n            </Container>\n\n            <h2 className=\"title\">Projects</h2>\n            <div className=\"projects\">\n                <Row>\n                    <Col>\n                        <h4 className=\"subtitle\">Search Engine</h4>\n                        <Container>\n                            <p>A scalable search engine implementation using hadoop pipieline and map reduce</p>\n                        </Container>\n                    </Col>\n                    <Col>\n                        <h4 className=\"subtitle\">Endless Runner</h4>\n                        <Container>\n                            <p>A web-based game that generates obstacles and pick-ups and keeps the player running</p>\n                        </Container>\n                    </Col>\n                    <Col>\n                        <h4 className=\"subtitle\">Client-side Dynamic Social Media</h4>\n                        <Container>\n                            <p>An Instagram clone application using client-side dynmaic pages, REST API, and React</p>\n                        </Container>\n                    </Col>\n                </Row>\n            </div>\n            <div className=\"spacing\"></div>\n\n            <h2 className=\"title\">Passions</h2>\n            <div className=\"passions\">\n                <Row>\n                    <Col>\n                        <h4 className=\"subtitle\">Dancing</h4>\n                        <Container>\n                            <p>I do urban and hip-hop dancing in my free time. A choreogrpaher and co-president on the dance crew FunKtion</p>\n                        </Container>\n                    </Col>\n                    <Col>\n                        <h4 className=\"subtitle\">Guitar</h4>\n                        <Container>\n                            <p>I have played acoustic guitar for 7 years</p>\n                        </Container>\n                    </Col>\n                    <Col>\n                        <h4 className=\"subtitle\">Creative Writing</h4>\n                        <Container>\n                            <p>I own a Chinese public blog and have compiled a book with my free writing pieces</p>\n                        </Container>\n                    </Col>\n                </Row>\n            </div>\n        </Styles>\n    )\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst Styles = styled.div `\n    .content {\n        vertical-align: top;\n        text-align: center;\n        border: 3px solid transparent;\n        padding-bottom: 40px;\n        padding-top: 20px;\n    }\n\n    .title {\n        vertical-align: top;\n        text-align: center;\n        height: 50px;\n        background-color: #92bfde;\n        color: white;\n    }\n\n    .subtitle {\n        color: #29476c;\n        vertical-align: top;\n        text-align: center;\n        padding-bottom: 10px;\n        padding-top: 20px;\n    }\n\n    .spacing {\n        height: 20px;\n    }\n`;\n\nexport const Experience = () => {\n    return (\n        <Styles>\n            <div>\n                <div className=\"title\">\n                    <h2>Experience</h2>\n                </div>\n\n                <div className=\"content\">\n                    <h4 className=\"subtitle\">Put on resume experiences</h4>\n                </div>\n\n                <div className=\"title\">\n                    <h2>Projects</h2>\n                </div>\n\n                <div className=\"content\">\n                    <h4 className=\"subtitle\">Search Engine</h4>\n                    <p>A scaleable search engine similar to a commercial search engine</p>\n                    <p>Indexing implemented with MapReduce on Hadoop pipeline to allow large scaling</p>\n                    <p>Information retrieval based on both tf-idf and PageRank scores</p>\n                    <p>Search interface driven by React with user-driven scoring and summarization</p>\n\n                    <span className=\"spacing\" />\n\n                    <h4 className=\"subtitle\">Endless Runner</h4>\n                    <p>A web-based side-scroller game using Vue framework and JavaScript</p>\n                    \n                    <span className=\"spacing\" />\n\n                    <h4 className=\"subtitle\">Client-side Dynamic Social Media</h4>\n                    <p>An Instagram clone application using client-side dynmaic pages, REST API, and React</p>\n                    <p>Render webpages to make asynchronous calls and update content seamelessly</p>\n                    <p>Allows users to create profile, log in, make posts, and react to other user's posts</p>\n                </div>\n            </div>\n        </Styles>\n    )\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst Styles = styled.div `\n    .content {\n        vertical-align: top;\n        text-align: center;\n        border: 3px solid transparent;\n        padding-bottom: 40px;\n        padding-top: 20px;\n    }\n\n    .title {\n        vertical-align: top;\n        text-align: center;\n        height: 50px;\n        background-color: #92bfde;\n        color: white;\n    }\n\n    .subtitle {\n        color: #29476c;\n        vertical-align: top;\n        text-align: center;\n        padding-bottom: 10px;\n        padding-top: 20px;\n    }\n\n    .spacing {\n        height: 20px;\n    }\n`;\n\nexport const Passion = () => {\n    return (\n        <Styles>\n            <div>\n                <div className=\"title\">\n                    <h2>Passion</h2>\n                </div>\n\n                <div className=\"content\">\n                    <h4 className=\"subtitle\">Hip-hop &amp; Urban Dancing</h4>\n                    <p>I am a choreographer and co-president at FunKtion, a student-led multicultural dance crew</p>\n                    <p>I organize performances, choreograph dance pieces and formations, and edit music cuts</p>\n                    \n                    <span className=\"spacing\" />\n\n                    <h4 className=\"subtitle\">Acoustic Guitar</h4>\n                    <p>I have been playing acoustic guitar for 7 years</p>\n                    <p>I arrange chords and fingerstyle sheet music</p>\n                    <p>I make guitar and singing covers of songs I enjoy</p>\n\n                    <span className=\"spacing\" />\n\n                    <h4 className=\"subtitle\">Creative Writing</h4>\n                    <p>I own and operate a Mandarin blog that gathers thousands of views</p>\n                    <p>I enjoy writing fiction, personal essays, and book and movie reviews</p>\n                    <p>I compiled 20 pieces of my writing into a paperpack book</p>\n                </div>\n            </div>\n        </Styles>\n    )\n}","import React from 'react'\n\nexport const NoMatch = () => {\n    return (\n        <div>\n            <h1>NoMatch Page</h1>\n      </div>\n    )\n}","import React from 'react';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nconst Styles = styled.div `\n    .navbar {\n        background: none;\n        position: sticky;\n        z-index: 1;\n    }\n\n    .navbar-brand, .navbar-nav .nav-link {\n        color: #bbb;\n\n        &:hover {\n            color: black;\n        }\n    }\n`;\n \nexport const NavBar = () => (\n    <Styles>\n        <Navbar expand=\"lg\">\n            <Navbar.Brand href=\"/website/#\">Jiankai Pu</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav></Nav>\n                <Nav classname=\"mr-auto\">\n                    <Nav.Item><Nav.Link href=\"/website/#\">Home</Nav.Link></Nav.Item>\n                    <Nav.Item><Nav.Link href=\"/website/#/experience\">Experience</Nav.Link></Nav.Item>\n                    <Nav.Item><Nav.Link href=\"/website/#/passion\">Passion</Nav.Link></Nav.Item>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    </Styles>\n)","import React from 'react';\nimport { Jumbotron as Jumbo, Container } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport img from '../assets/background.jpeg';\n\nconst Styles = styled.div`\n    .jumbo {\n        background: url(${img}) no-repeat fixed bottom;\n        background-size: cover;\n        color: #efefef;\n        height: 400px;\n        position: relative;\n        text-align: center;\n        z-index: -3;\n    }\n\n    .overlay {\n        position: absolute;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n        z-index: -2;\n    }\n\n    .spacing {\n        height: 40px;\n    }\n`;\n\nexport const Jumbotron = () => (\n    <Styles>\n        <Jumbo fluid className=\"jumbo\">\n            <div className=\"overlay\"></div>\n            <div className=\"spacing\"></div>\n            <Container>\n                <h1>Jiankai Kevin Pu</h1>\n                <p>Learn more about me here</p>\n                <p>~Website still under construction~</p>\n            </Container>\n        </Jumbo>\n    </Styles>\n)","import {library} from '@fortawesome/fontawesome-svg-core'\n\nimport {\n    faGithub,\n    faFacebookSquare,\n    faTwitter,\n    faLinkedin,\n    faSkype,\n    faGoogle,\n    faInstagramSquare,\n    faYoutube,\n} from '@fortawesome/free-brands-svg-icons'\n\nlibrary.add(\n    faGithub,\n    faFacebookSquare,\n    faTwitter,\n    faLinkedin,\n    faSkype,\n    faGoogle,\n    faInstagramSquare,\n    faYoutube,\n)\n","import React from 'react';\nimport '../FontAwesome'\nimport { Jumbotron as Jumbo, Container } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { Row, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// TODO: Needs to get the icons showing up\n\nconst Styles = styled.div`\n    .end {\n        background-size: cover;\n        background-color: #92bfde;\n        color: #efefef;\n        height: 200px;\n        position: relative;\n        text-align: center;\n    }\n\n    .icons {\n        display: grid;\n        place-items: center;\n        background-color: #92bfde;\n        color: #efefef;\n        height: 200px;\n        font-size: 30pt;\n        z-index:1\n    }\n\n    .icon {\n        padding-right: 35px;\n        padding-left: 35px;\n        color: white;\n    }\n`;\n\nexport const End = () => (\n    <Styles>\n        <div className=\"icons\">\n            <Row>\n                <Col>\n                    <a className=\"icon\" href=\"https://github.com/kevinpjk\"><FontAwesomeIcon icon={['fab', 'github']} /></a>\n                    <a className=\"icon\" href=\"mailto: kevin99pjk@gmail.com\"><FontAwesomeIcon icon={['fab', 'google']} /></a>\n                    <a className=\"icon\" href=\"https://www.linkedin.com/in/jiankai-kevin-pu\"><FontAwesomeIcon icon={['fab', 'linkedin']} /></a>\n                </Col>\n            </Row>\n        </div>\n    </Styles>\n)","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Home } from './Home';\nimport { Experience } from './Experience';\nimport { Passion } from './Passion';\nimport { NoMatch } from './NoMatch';\nimport { Layout } from './components/Layout';\nimport { NavBar} from './components/NavBar';\nimport { Jumbotron } from './components/Jumbotron';\nimport { End } from './components/End';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <NavBar />\n      <Jumbotron />\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/experience\" component={Experience} />\n          <Route path=\"/passion\" component={Passion} />\n          <Route component={NoMatch} />\n        </Switch>\n      </Router>\n      <End />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}